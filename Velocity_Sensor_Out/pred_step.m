 function [covarEst,uEst] = pred_step(uPrev,covarPrev,angVel,acc,dt)
%% BEFORE RUNNING THE CODE CHANGE NAME TO pred_step
    %% Parameter Definition
    % uPrev - is the mean of the prev state
    %covarPrev - covar of the prev state
    %angVel - angular velocity input at the time step
    %acc - acceleration at the timestep
    %dt - difference in time 
      %% To derive the Jacobains U_t and A_t:
    %N=sym('N',[12,1]);                                                                            To represent the 4 different noise variables
    %U=sym('U',[6,1]);                                                                             To represent the input data
    %X=sym('X',[15,1]);                                                                            To represent the process model
    %G=@(X)[cos(X(5)) 0 -cos(X(4))*sin(X(5));0 4 sin(X(4));sin(X(5)) 0 cos(X(4))*cos(X(5))];     1 To get the angular velocity in body frame
    %R=@(X)[cos(X(6))*cos(X(5))-sin(X(4))*sin(X(6))*sin(X(5)) -cos(X(4))*sin(X(6)) cos(X(6))*sin(X(5))+cos(X(5))*sin(X(4))*sin(X(6));cos(X(5))*sin(X(6))+cos(X(6))*sin(X(4))*sin(X(5)) cos(X(4))*cos(X(6)) sin(X(6))*sin(X(5))-cos(X(6))*cos(X(5))*sin(X(4));-cos(X(4))*sin(X(5)) sin(X(4)) cos(X(4))*cos(X(5))];    Z-X-Y Euler Angle Parameterization
    %G1=matlabFunction(simplify(inv(G(X))),'Vars',{X});
    %process = @(X,U,N)[X(7);X(8);X(9);- cos(X(5))*(N(1) - U(1) + X(10)) - sin(X(5))*(N(3) - U(3) + X(12));U(2) - N(2) - X(11) + (cos(X(5))*sin(X(4))*(N(3) - U(3) + X(12)))/cos(X(4)) - sin(X(4))*sin(X(5))*(N(1) - U(1) + X(10))/cos(X(4)); (sin(X(5))*(N(1) - U(1) + X(10)))/cos(X(4)) - (cos(X(5))*(N(3) - U(3) + X(12)))/cos(X(4));cos(X(4))*sin(X(6))*(N(5) - U(5) + X(14)) - (cos(X(6))*sin(X(5)) + cos(X(5))*sin(X(4))*sin(X(6)))*(N(6) - U(6) + X(15)) - (cos(X(5))*cos(X(6)) - sin(X(4))*sin(X(5))*sin(X(6)))*(N(4) - U(4) + X(13));- (cos(X(5))*sin(X(6)) + cos(X(6))*sin(X(4))*sin(X(5)))*(N(4) - U(4) + X(13)) - (sin(X(5))*sin(X(6)) - cos(X(5))*cos(X(6))*sin(X(4)))*(N(6) - U(6) + X(15)) - cos(X(4))*cos(X(6))*(N(5) - U(5) + X(14));cos(X(4))*sin(X(5))*(N(4) - U(4) + X(13)) - cos(X(4))*cos(X(5))*(N(6) - U(6) + X(15)) - sin(X(4))*(N(5) - U(5) + X(14)) - 981/100;N(7);N(8);N(9);N(10);N(11);N(12)]; % Computing Process model
    %U_t=matlabFunction(simplify(jacobian(process(X,U,N),N)),'Vars',{X;U;N});                      Computing Jacobian Ut
    %A_t=matlabFunction(simplify(jacobian(process(X,U,N),X)),'Vars',{X;U;N});                      Computing Jacobian At
    %% Assigning required values to estimate covarEst and uEst:
    v1=0; v2=0; v3=0; v4=0; v5=0; v6=0; v7=0; v8=0; v9=0; v10=0; v11=0; v12=0;
    n_bg1=0.0000001; n_bg2=0.0000001; n_bg3=0.0000001; n_ba1=0.0000001; n_ba2=0.0000001; n_ba3=0.0000001;
    n_a1=.5; n_a2=.01; n_a3=.01; n_g1=.01; n_g2=.01; n_g3=0.004;
    ng=[n_g1;n_g2;n_g3];
    na=[n_a1;n_a2;n_a3]; 
    nbg=[n_bg1;n_bg2;n_bg3];
    nba=[n_ba1;n_ba2;n_ba3];
    x1=uPrev(1); x2=uPrev(2); x3=uPrev(3); x4=uPrev(4); x5=uPrev(5); x6=uPrev(6); x7=uPrev(7); x8=uPrev(8); x9=uPrev(9);
    x10=uPrev(10); x11=uPrev(11); x12=uPrev(12); x13=uPrev(13); x14=uPrev(14); x15=uPrev(15);
    ang1=angVel(1); ang2=angVel(2); ang3=angVel(3); acc1=acc(1); acc2=acc(2); acc3=acc(3);
    %ANG=[ang1;ang2;ang3]; ACC=[acc1;acc2;acc3]; Vel=[x7;x8;x9];
    b_g=[x10; x11; x12]; b_a=[x13; x14; x15]; G=[cos(x5) 0 -cos(x4)*cos(x5);0 1 sin(x4);sin(x5) 0 cos(x4)*cos(x5)];
    R=[cos(x6)*cos(x5)-sin(x4)*sin(x6)*sin(x5) -cos(x4)*sin(x6) cos(x6)*sin(x5)+cos(x5)*sin(x4)*sin(x6);cos(x5)*sin(x6)+cos(x6)*sin(x4)*sin(x5) cos(x4)*cos(x6) sin(x6)*sin(x5)-cos(x6)*cos(x5)*sin(x4);-cos(x4)*sin(x5) sin(x4) cos(x4)*cos(x5)]; 
    x_dot=[x7;x8;x9;- cos(x5)*(v1 - ang1 + x10) - sin(x5)*(v3 - ang3 + x12);ang2 - v2 - x11 + (cos(x5)*sin(x4)*(v3 - ang3 + x12))/cos(x4) - sin(x4)*sin(x5)*(v1 - ang1 + x10)/cos(x4); (sin(x5)*(v1 - ang1 + x10))/cos(x4) - (cos(x5)*(v3 - ang3 + x12))/cos(x4);cos(x4)*sin(x6)*(v5 - acc2 + x14) - (cos(x6)*sin(x5) + cos(x5)*sin(x4)*sin(x6))*(v6 - acc3 + x15) - (cos(x5)*cos(x6) - sin(x4)*sin(x5)*sin(x6))*(v4 - acc1 + x13);- (cos(x5)*sin(x6) + cos(x6)*sin(x4)*sin(x5))*(v4 - acc1 + x13) - (sin(x5)*sin(x6) - cos(x5)*cos(x6)*sin(x4))*(v6 - acc3 + x15) - cos(x4)*cos(x6)*(v5 - acc2 + x14);cos(x4)*sin(x5)*(v4 - acc1 + x13) - cos(x4)*cos(x5)*(v6 - acc3 + x15) - sin(x4)*(v5 - acc2 + x14) - 981/100;v7;v8;v9;v10;v11;v12];
    %% Computing covarEst and uEst:
A_t=[  0, 0, 0,                                                                                                                                                                            0,                                                                                                                             0,                                                                                                                                                                 0, 1, 0, 0,                             0,     0,                             0,                                           0,                0,                                           0;


       0, 0, 0,                                                                                                                                                                            0,                                                                         sin(x5)*(v1 - ang1 + x10) - cos(x5)*(v3 - ang3 + x12),                                                                                                                                                                 0, 0, 0, 0,                       -cos(x5),    0,                      -sin(x5),                                           0,                0,                                           0;
       0, 0, 0, (cos(x5)*(v3 - ang3 + x12))/4 - (sin(x5)*(v1 - ang1 + x10))/4 + (cos((x5))*sin((x4))^2*(v3- ang3 + x12))/(4*cos(x4)^2) - (sin(x4)^2*sin(x5)*(v1 - ang1 + x10))/(4*cos(x4)^2),                           - (cos(x5)*sin(x4)*(v1 - ang1 + x10))/(4*cos(x4)) - (sin(x4)*sin(x5)*(v3 - ang3 + x12))/(4*cos(x4)),                                                                                                                                                                 0, 0, 0, 0, -(sin(x4)*sin(x5))/(4*cos(x4)), -1/4, (cos(x5)*sin(x4))/(4*cos(x4)),                                           0,                0,                                           0;
       0, 0, 0,                                                                                (sin(x4)*sin(x5)*(v1 - ang1 + x10))/cos(x4)^2 - (cos(x5)*sin(x4)*(v3 - ang3 + x12))/cos(x4)^2,                                                     (cos(x5)*(v1 - ang1 + x10))/cos(x4) + (sin(x5)*(v3 - ang3 + x12))/cos(x4),                                                                                                                                                                 0, 0, 0, 0,                sin(x5)/cos(x4),    0,              -cos(x5)/cos(x4),                                           0,                0,                                           0;
       0, 0, 0,                                                    cos(x4)*sin(x5)*sin(x6)*(v4 - acc1 + x13) - cos(x4)*cos(x5)*sin(x6)*(v6 - acc3 + x15) - sin(x4)*sin(x6)*(v5 - acc2 + x14), (cos(x6)*sin(x5) + cos(x5)*sin(x4)*sin(x6))*(v4 - acc1 + x13) - (cos(x5)*cos(x6) - sin(x4)*sin(x5)*sin(x6))*(v6 - acc3 + x15), (cos(x5)*sin(x6) + cos(x6)*sin(x4)*sin(x5))*(v4 - acc1 + x13) + (sin(x5)*sin(x6) - cos(x5)*cos(x6)*sin(x4))*(v6 - acc3 + x15) + cos(x4)*cos(x6)*(v5 - acc2 + x14), 0, 0, 0,                              0,    0,                             0,   sin(x4)*sin(x5)*sin(x6) - cos(x5)*cos(x6),  cos(x4)*sin(x6), - cos(x6)*sin(x5) - cos(x5)*sin(x4)*sin(x6);
       0, 0, 0,                                                    cos(x6)*sin(x4)*(v5 - acc2 + x14) + cos(x4)*cos(x5)*cos(x6)*(v6 - acc3 + x15) - cos(x4)*cos(x6)*sin(x5)*(v4 - acc1 + x13), (sin(x5)*sin(x6) - cos(x5)*cos(x6)*sin(x4))*(v4 - acc1 + x13) - (cos(x5)*sin(x6) + cos(x6)*sin(x4)*sin(x5))*(v6 - acc3 + x15), cos(x4)*sin(x6)*(v5 - acc2 + x14) - (cos(x6)*sin(x5) + cos(x5)*sin(x4)*sin(x6))*(v6 - acc3 + x15) - (cos(x5)*cos(x6) - sin(x4)*sin(x5)*sin(x6))*(v4 - acc1 + x13), 0, 0, 0,                              0,    0,                             0, - cos(x5)*sin(x6) - cos(x6)*sin(x4)*sin(x5), -cos(x4)*cos(x6),   cos(x5)*cos(x6)*sin(x4) - sin(x5)*sin(x6);
       0, 0, 0,                                                                            cos(x5)*sin(x4)*(v6 - acc3 + x15) - cos(x4)*(v5 - acc2 + x14) - sin(x4)*sin(x5)*(v4 - acc1 + x13),                                                         cos(x4)*cos(x5)*(v4 - acc1 + x13) + cos(x4)*sin(x5)*(v6 - acc3 + x15),                                                                                                                                                                  0, 0, 0, 0,                             0,    0,                             0,                             cos(x4)*sin(x5),         -sin(x4),                            -cos(x4)*cos(x5);






U_t=[                       0,  0,                            0,                                           0,                0,                                           0, 0, 0, 0, 0, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 0, 0, 0, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 0, 0, 0, 0, 0;
                     -cos(x5),  0,                     -sin(x5),                                           0,                0,                                           0, 0, 0, 0, 0, 0, 0;
   -(sin(x4)*sin(x5))/cos(x4), -1,    (cos(x5)*sin(x4))/cos(x4),                                           0,                0,                                           0, 0, 0, 0, 0, 0, 0;
              sin(x5)/cos(x4),  0,             -cos(x5)/cos(x4),                                           0,                0,                                           0, 0, 0, 0, 0, 0, 0;
                            0,  0,                            0,   sin(x4)*sin(x5)*sin(x6) - cos(x5)*cos(x6),  cos(x4)*sin(x6), - cos(x6)*sin(x5) - cos(x5)*sin(x4)*sin(x6), 0, 0, 0, 0, 0, 0;
                            0,  0,                            0, - cos(x5)*sin(x6) - cos(x6)*sin(x4)*sin(x5), -cos(x4)*cos(x6),   cos(x5)*cos(x6)*sin(x4) - sin(x5)*sin(x6), 0, 0, 0, 0, 0, 0;
                            0,  0,                            0,                             cos(x4)*sin(x5),         -sin(x4),                            -cos(x4)*cos(x5), 0, 0, 0, 0, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 1, 0, 0, 0, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 1, 0, 0, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 0, 1, 0, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 0, 0, 1, 0, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 0, 0, 0, 1, 0;
                            0,  0,                            0,                                           0,                0,                                           0, 0, 0, 0, 0, 0, 1];
    F_t=eye(length(uPrev))+dt*A_t;
    V_t=U_t;
    Q_t=diag([ng;na;nbg;nba]);
    Q_d=Q_t*dt;
    uEst=uPrev+dt*x_dot;
    covarEst=F_t*covarPrev*(F_t.')+V_t*Q_d*(V_t.');
end